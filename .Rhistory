library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
?llines()
?text()
?axis()
?points()
?trellis.par.set()
?splom()
?print.trellis()
?par()
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, geom = "smooth")
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(datasets)
data(airquality)
gplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
?qplot()
install.packages("ggplot2")
library(ggplot2)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality, geom = "smooth")
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality, geom = "smooth")
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
g <- ggplot(movies, aes(votes, rating))
print(g)
g
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data = movies) + stats_smooth("loess")
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies) + stats_smooth("loess")
qplot(votes, rating, data = movies) + stats_smooth("loess")
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies) + geom_smooth()
?qplot()
?ggplot2()
load("F:/Coursera/05 - Reproducible Research/Assignments/1/RepData_PeerAssessment1/.RData")
?format()
install.packages("tm")
(.75 * .30)/((.75 * .3)+(.48 * .70)
)
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
sum(w*x)/sum(w
)
z <- x*w
mean(z)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
rm(w)
rm(z)
lm(x~y)
yc <- y - mean(y)
xc <- x - mean(x)
beta1 <- sum(yc * xc) / sum(xc ^ 2)
c(beta1, coef(lm(y ~ x))[2])
fit.origin <- lm( y ~ x - 1 )
summary(fit.origin)
library(datasets)
data(mtcars)
mtcars$mpg
yc <- mtcars$mpg - mean(mtcars$mpg)
xc <- mtcars$wt - mean(mtcars$wt)
beta1 <- sum(yc * xc) / sum(xc ^ 2)
c(beta1, coef(lm(mtcars$mpg ~ mtcars$wt))[2])
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
xn <- (x - mean(x))/sd(x)
xn[1]
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
rm(xn)
lm(y ~ x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
lm(x~1)
.51/.5
value2<- 70
mean2<- 80
sd2<- 10
answ2<-pnorm(value2, mean2, sd2)
N = 9
mean = -2
# error = qt(0.95,df = 9)*sd/sqrt(N-1) = 2
ans = 2 * sqrt(N) / qt(0.975, df = N-1)
round(ans, 2)
N = 9
mean = 1100
sd = 30
error = qt(0.975, df = N-1) * sd / sqrt(N)
ans = mean + c(-1,1) * error
round(ans)
nx = 10
ny = 10
mx = 3
my = 5
Sx2 = 0.6
Sy2 = 0.68
Sr = sqrt(((nx-1)*Sx2+(ny-1)*Sy2)/(nx+ny-2))
ans = mx - my + c(-1,1) * qt(0.975, df = nx + ny - 2) * Sr * sqrt(1/nx+1/ny)
round(ans, 2)
nx = 100
ny = 100
mx = 4
my = 6
Sx2 = 0.5
Sy2 = 2
Sr = sqrt(((nx-1)*Sx2+(ny-1)*Sy2)/(nx+ny-2))
ans = my - mx + c(-1,1) * qt(0.975, df = nx + ny - 2) * Sr * sqrt(1/nx+1/ny)
round(ans, 2)
nD = 9
nP = 9
mD = -3
mP = 1
sD = 1.5
sP = 1.8
Sr = sqrt(((nD-1)*sD^2+(nP-1)*sP^2)/(nD+nD-2))
ans = mD - mP + c(-1,1) * qt(0.9, df = nD + nP - 2) * Sr * sqrt(1/nD+1/nP)
ans
rm(list = ls())
subject <- c(1:5,1:5)
measurement <- c(140,138,150,148,135,132,135,151,146,130)
type <- c(rep("baseline", 5), rep("week2", 5))
dataset <- data.frame(subject, measurement, type)
ttest <- t.test(measurement ~ type, paired = T, data = dataset)
round(ttest$p.value,3)
rm(list = ls())
n <- 9
mean <- 1100
sd <- 30
round(mean + c(-1,1) * qt(0.975, df = n-1) * sd / sqrt(n))
rm(list = ls())
round(binom.test(3,4,p=0.5,alternative = 'greater')$p.value,2)
rm(list = ls())
round(ppois(0.01*1787-1, 10, lower.tail = F),2)
p <- 1 / 100
pr <- 10 / 1787
n <- 1787
serror <- sqrt(p * (1-p) / n)
z <- (p-pr) / serror
pnorm(z, lower.tail = F) # 0.03066625
rm(list = ls())
n1 = 9
n2 = 9
mean1 = -3.0
sd1 = +1.5
sigma1 = sd1
mean2 = +1.0
sd2 = +1.8
sigma2 = sd2
sp = sqrt(((n1 - 1)*sigma1^2+(n2-1)*sigma2^2) / (n1 + n2 - 2))
t = abs(mean1 - mean2) / sp / sqrt(1/n1 + 1/n2)
round(1 - pt(t, df = n1 + n2 - 2),2)
(1 - pt(t, df = n1 + n2 - 2),2)
t = abs(mean1 - mean2) / sp / sqrt(1/n1 + 1/n2)
t
?round()
rm(list = ls())
n = 100
mean = 0.01
sd = 0.04
sigma = sd / sqrt(n)
z = qnorm(0.95, mean = 0, sd = sigma)
round(pnorm(z, mean = mean, sd = sigma, lower.tail = F),2)
rm(list = ls())
n = c(100, 120, 140, 160, 180)
mean = 0.01
sd = 0.04
sigma = sd / sqrt(n)
z = qnorm(0.95, mean= 0, sd = sigma)
result = data.frame(num = n, beta = round(pnorm(z, mean = mean, sd = sigma, lower.tail = F),2))
result
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
fit <- lm(y~x)
summary(fit)
data(mtcars)
attach(mtcars)
fit <- lm(mpg ~ wt, mtcars)
summary(fit)
exp <- fit$coefficients[1] + mean(wt) * fit$coefficients[2]
exp - 2 * 0.5591
data(mtcars)
# Easy way
fit <- lm(mpg ~ wt, data = mtcars)
coef <- summary(fit)$coefficients
coef[1,1] + -1 * qt(0.975, df = fit$df) * coef[1,2]
rm(list = ls())
data(mtcars)
# Easy way
fit <- lm(mpg ~ wt, data = mtcars)
coef <- summary(fit)$coefficients
coef[1,1] + -1 * qt(0.975, df = fit$df) * coef[1,2]
?mtcars()
summary(mtcars)
?mtcars
require(graphics)
pairs(mtcars, main = "mtcars data")
coplot(mpg ~ disp | as.factor(cyl), data = mtcars,
panel = panel.smooth, rows = 1)
fit[[1]][1] + 3 * fit[[1]][2]
fit2<-lm(y~I(x/2))
tbl2<-summary(fit2)$coefficients
mn<-tbl2[2,1]      #mean is the estimated slope
std_err<-tbl2[2,2] #standard error
deg_fr<-fit2$df    #degree of freedom
#Two sides T-Tests
mn + c(-1,1) * qt(0.975,df=deg_fr) * std_err
View(mtcars)
c<-5
cf1<-summary(fit)$coefficients
cf1
fit4<-lm(y~I(x+c)) # add some constant c
cf2<-summary(fit4)$coefficients
cf2
fit4<-lm(y~I(x+c))
fit <- lm(mpg ~ wt, data = mtcars)
coef <- summary(fit)$coefficients
sigma = summary(fit)$sigma
mpg <- predict(fit, newdata = data.frame(wt = 3))
mpg + qt(0.975, df = fit$df) * sigma
fit <- lm(y ~ I(x/2 - mean(x/2)))
coef <- summary(fit)$coefficients
coef[2,1] + -1 * qt(0.975, df = fit$df) * coef[2,2]
l = lm(y ~ x)
lm(y ~ I(x + 10))
c<-5
cf1<-summary(fit)$coefficients
cf1
fit4<-lm(y~I(x+c))
lm(y ~ x)
lm(y ~ I(x/100))
fit <- lm(y ~ I(x/2 - mean(x/2)))
coef <- summary(fit)$coefficients
coef[2,1] + -1 * qt(0.975, df = fit$df) * coef[2,2]
fit <- lm(mpg ~ wt, data = mtcars)
coef <- summary(fit)$coefficients
sigma = summary(fit)$sigma
mpg <- predict(fit, newdata = data.frame(wt = 3))
mpg + qt(0.975, df = fit$df) * sigma
?mtcars
View(mtcars)
fit <- lm(y ~ I(x/2 - mean(x/2)))
coef <- summary(fit)$coefficients
coef[2,1] + -1 * qt(0.975, df = fit$df) * coef[2,2]
data(mtcars)
fit <- lm(mpg ~ factor(cyl) + wt, mtcars)
summary(fit)
lm(mpg ~ factor(cyl)+wt, data = mtcars)
fit2 <- lm(mpg ~ factor(cyl), mtcars)
summary(fit2)
lm(mpg ~ factor(cyl), data = mtcars)
l1<-lm(mpg ~ factor(cyl)+wt, data = mtcars)
l2<-lm(mpg ~ factor(cyl)*wt, data = mtcars)
library(lmtest)
lrtest(l2,l1)
install(lmtest)
install.packages("lmtest")
l1<-lm(mpg ~ factor(cyl)+wt, data = mtcars)
l2<-lm(mpg ~ factor(cyl)*wt, data = mtcars)
library(lmtest)
lrtest(l2,l1)
fit3 <- lm(mpg ~ factor(cyl)*wt, mtcars)
summary(fit3)
lm(mpg ~ I(wt * 0.5) + factor(cyl), data = mtcars)
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
fit <- lm(y ~ x)
lm.influence(fit)$hat
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
fit<-lm(y~x)
tail(round(sort(hatvalues(fit)),4),1)
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
fit<-lm(y~x)
sort(round(dfbeta(fit)[,2],3))
v
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
fit <- lm(y~x)
lm.influence(fit)$hat
dfbetas(fit)
hist(runif(1000))
mns = NULL
for (i in 1 : 1000) mns = c(mns, mean(runif(40)))
hist(mns)
setwd("F:/Coursera/06 - Statistical Inference/Assignment/StatisticalInference")
install.packages("latex")
install.packages("knitr")
source('F:/Coursera/06 - Statistical Inference/Assignment/StatisticalInference/KnitToPdf.R')
source('F:/Coursera/06 - Statistical Inference/Assignment/StatisticalInference/KnitToPdf.R')
KnitToPdf()
source('F:/Coursera/06 - Statistical Inference/Assignment/StatisticalInference/KnitToPdf.R')
source('F:/Coursera/06 - Statistical Inference/Assignment/StatisticalInference/KnitToPdf.R')
KnitToPdf()
install.packages("bitops")
library(bitops)
install.packages(c("markdown", "knitr"))
source('F:/Coursera/06 - Statistical Inference/Assignment/StatisticalInference/KnitToPdf.R')
KnitToPdf()
source('F:/Coursera/06 - Statistical Inference/Assignment/StatisticalInference/KnitToPdf.R')
KnitToPdf()
source('F:/Coursera/06 - Statistical Inference/Assignment/StatisticalInference/KnitToPdf.R')
source('F:/Coursera/06 - Statistical Inference/Assignment/StatisticalInference/KnitToPdf.R')
KnitToPdf()
source('F:/Coursera/06 - Statistical Inference/Assignment/StatisticalInference/KnitToPdf.R')
KnitToPdf()
getwd()
source('F:/Coursera/06 - Statistical Inference/Assignment/StatisticalInference/KnitToPdf.R')
KnitToPdf()
source('F:/Coursera/06 - Statistical Inference/Assignment/StatisticalInference/KnitToPdf.R')
KnitToPdf()
